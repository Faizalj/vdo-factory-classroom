{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        420,
        900
      ],
      "id": "edbb591b-3f76-42b7-b39f-81c4d1db6deb",
      "name": "Limit"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -240,
        1560
      ],
      "id": "0ed279ad-1dce-4912-bf1a-bcc6392b38dc",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start generating TTS (chatterbox)').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1700,
        1560
      ],
      "id": "d533e5ce-ade7-4ef0-a525-32bd7e19ca3b",
      "name": "Get status of TTS generation",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1860,
        1560
      ],
      "id": "fd1a34b9-c79c-4bda-af25-d7421773e9d8",
      "name": "TTS status switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/video-tools/generate/tts-captioned-video",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "specifyBody": "string",
        "body": "={{ \n\n[\n  `background_id=${$('Upload image to server').item.json.file_id}`,\n  $json.tts_audio_id ? `audio_id=${$json.tts_audio_id}` : false,\n  $json.tts_audio_id ? '' : `text=${encodeURIComponent($('Loop Over Items').item.json.text)}`,\n  $json.tts_audio_id ? '' :  `kokoro_voice=${$('Configure me').item.json.kokoro_voice}`,\n  $json.tts_audio_id ? '' : `kokoro_speed=${$('Configure me').item.json.kokoro_speed}`\n].filter(Boolean).join('&') \n\n}}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2560,
        1420
      ],
      "id": "56b0729c-a7b9-49b2-8549-b668a1a8f8c9",
      "name": "Start generating captioned TTS video"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start generating captioned TTS video').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2980,
        1420
      ],
      "id": "924819b8-7d7f-4a79-b971-59998d3af241",
      "name": "Get video generation status",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3160,
        1420
      ],
      "id": "9c15a7f0-cbf9-4783-a5f0-be653a36432b",
      "name": "Video generation switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a7fdacca-749e-4f69-84fd-50075e0e3409",
              "name": "video_id",
              "value": "={{ $('Start generating captioned TTS video').item.json.file_id }}",
              "type": "string"
            },
            {
              "id": "6c99c267-5c41-4697-ba19-b51d9e8c9a4e",
              "name": "tts_id",
              "value": "={{ $('Global TTS audio id').item.json.tts_audio_id }}",
              "type": "string"
            },
            {
              "id": "21dd08a7-f785-4829-8609-a99950f21572",
              "name": "image_id",
              "value": "={{ $('Upload image to server').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3420,
        1620
      ],
      "id": "813fa892-bcab-44fb-825e-566c99a1cf56",
      "name": "Setup media fields"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -200,
        2240
      ],
      "id": "77478dd1-7e4a-48d7-a933-6c1efaf4b053",
      "name": "Combine loop items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/video-tools/merge",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_ids",
              "value": "={{ $json.data.map(item => item.video_id).join(',') }}"
            },
            {
              "name": "background_music_id",
              "value": "={{ $('Configure me').item.json.background_music_id }}"
            },
            {
              "name": "background_music_volume",
              "value": "={{ $('Configure me').item.json.background_music_volume }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        2240
      ],
      "id": "aa7600bc-316c-4f16-833f-086b6624a639",
      "name": "Start merging the videos"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        2240
      ],
      "id": "1f3e2a76-e24f-45f8-94d2-d40746fe3fbb",
      "name": "Get status of the video merge"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        600,
        2240
      ],
      "id": "9679a4d5-5a6d-4930-af54-b1577852818f",
      "name": "Video merge status switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13b0dde8-b067-41d2-b7c2-fa5addf56a25",
              "name": "download_url",
              "value": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1420,
        3100
      ],
      "id": "1153f1f1-fa9c-4bc2-9356-c9bda5b635d1",
      "name": "Setup final video download URL"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1520,
        1560
      ],
      "id": "f6dcdd51-8083-49f6-bec9-9df36e7e7854",
      "name": "Wait until the TTS gets generated",
      "webhookId": "83468f41-991c-46ac-bd23-c092b5fa2009"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/audio-tools/tts/chatterbox",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Loop Over Items').item.json.text }}"
            },
            {
              "name": "sample_audio_id",
              "value": "={{ $('Configure me').item.json.chatterbox_clone_voice_id ?? '' }}"
            },
            {
              "name": "exaggeration",
              "value": "={{ $('Configure me').item.json.chatterbox_exaggeration }}"
            },
            {
              "name": "cfg_weight",
              "value": "={{ $('Configure me').item.json.chatterbox_cfg_weight }}"
            },
            {
              "name": "temperature",
              "value": "={{ $('Configure me').item.json.chatterbox_temperature }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        1560
      ],
      "id": "10ba7e9e-db81-4b93-bdd2-b8a5ed06ba7a",
      "name": "Start generating TTS (chatterbox)"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2760,
        1420
      ],
      "id": "177ac9fd-9d6b-4d56-853e-8f0b4bbb6531",
      "name": "Wait until the video gets generated",
      "webhookId": "f5d2f68d-7349-467f-91ba-a764081269eb"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        220,
        2240
      ],
      "id": "2c31d036-0aae-4180-a7fa-d28ae80e89f7",
      "name": "Wait until the videos gets merged together",
      "webhookId": "b7d7d8f6-b8f7-4b05-b943-ae3f202063a5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Configure me').item.json.tts_engine }}",
                    "rightValue": "kokoro",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5ae108d7-13b2-41aa-ab18-45a80515ad51"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "kokoro"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a3dbceb9-96f7-4f78-b5e4-81bd6cb9a422",
                    "leftValue": "={{ $('Configure me').item.json.tts_engine }}",
                    "rightValue": "chatterbox",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chatterbox"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1120,
        1440
      ],
      "id": "7db76e38-9cd0-4d10-90cd-9a90a57fb2af",
      "name": "TTS switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d41f1ef6-7591-41b7-805d-94b58caba5c4",
              "name": "tts_audio_id",
              "value": "={{ $('Start generating TTS (chatterbox)').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2120,
        1540
      ],
      "id": "86eb76d3-6a33-47e9-8ab9-6dbbdc248159",
      "name": "Setup TTS file_id"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87d65a77-d25e-42b2-86ac-7b1c4efb2990",
              "name": "text",
              "value": "={{ $json.text.includes(\"<think>\") ? $json.text.split(\"</think>\")[1].trim() : $json.text.trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        780
      ],
      "id": "7769f3ca-3ac2-4434-92f2-87a13840ab02",
      "name": "Cleanup text"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1100,
        960
      ],
      "id": "5ccef997-f4a6-48f6-ad7d-8c56aa066208",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "AA65xz9Vi0Pnrj5E",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68de9e0e-e234-4509-a57a-4c4c42590620",
              "name": "tts_audio_id",
              "value": "={{ $json.tts_audio_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2380,
        1420
      ],
      "id": "e8a976c8-5a7e-4c32-85d5-d0a8d569a72a",
      "name": "Global TTS audio id"
    },
    {
      "parameters": {
        "content": "# 4. Pick a story ⚠️\n\n⚠️ set credentials in the  Supabase node and select \nthe right database",
        "height": 400,
        "width": 980
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        680
      ],
      "id": "cddb712a-3ef9-4357-bce3-e737369e24ae",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 5. Create script from the story",
        "height": 400,
        "width": 880
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        680
      ],
      "id": "72b57fde-11b9-481e-a9c5-de75ccd21316",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 9. Merge the videos",
        "height": 360,
        "width": 1180
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        2120
      ],
      "id": "d9311ff3-0e32-4803-8e3f-cdf6bfb50cfe",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# 7. Create speech from text",
        "height": 520,
        "width": 1200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1080,
        1280
      ],
      "id": "03627180-315b-4cbc-92ab-db70d514e6b7",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# 8. Generate captioned video",
        "height": 520,
        "width": 1240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2320,
        1280
      ],
      "id": "d8a001c2-ffd6-4642-acc4-cc7c7d2b21f4",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# 10. Save to the database ⚠️\n\n⚠️ set credentials in the Supabase node and select \nthe right database",
        "height": 360,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        2120
      ],
      "id": "64e6a68a-eaa2-4b83-be5e-8562c1249163",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "url": "={{ $('Setup final video download URL').item.json.download_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1820,
        3100
      ],
      "id": "34405d4a-95ba-4f1f-8729-eb5b33e8814b",
      "name": "Download the video"
    },
    {
      "parameters": {
        "text": "=<Instructions>\nBreak up the text to multiple chunks that I can use for generating a youtube video, and for each chunk add an image generation prompt.\n\nAlso create a title and a description for the video.\n\nUse the following art style for the image prompts:\n\nArt style:\n{{ $('Configure me').item.json.art_style }}\n\nFormat the response to include all required fields: scenes, title, description, and tags.\n\n</Instructions>\n\n<Text>\n{{ $json.text }}\n</Text>\n\n/nothink",
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scenes\": {\n            \"type\": \"array\",\n            \"description\": \"user name\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"text\": {\n                        \"type\": \"string\",\n                        \"description\": \"the text of the scene, it will be used for TTS\"\n                    },\n                    \"image_prompt\": {\n                        \"type\": \"string\",\n                        \"description\": \"prompt for image generation\"\n                    }\n                },\n                \"required\": [\n                    \"text\",\n                    \"image_prompt\"\n                ]\n            }\n        },\n        \"title\": {\n            \"type\": \"string\",\n            \"description\": \"the title of the youtube video\"\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"the description of the youtube video\"\n        },\n        \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"tags for sharing the video on youtube\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"scenes\",\n        \"title\",\n        \"description\",\n        \"tags\"\n    ]\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.1,
      "position": [
        1440,
        780
      ],
      "id": "bc7c6a55-f005-47b8-8bdb-813a05536f25",
      "name": "Create the script"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Instructions>\nUsing the below content, create 10s-60s long {{ $('Configure me').item.json.content_type }}.\nThe generated script will be used in a YouTube video. the script sould have hook and call to action (CTA)\nReturn clear text, no markdowns or any other styling is needed.\n</Instructions>\n\n<Post>\n{{ $('Limit').item.json.title }}\n\n{{ $('Limit').item.json.content }}\n</Post>\n\n/nothink",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        980,
        780
      ],
      "id": "089f93c9-3101-4c64-a236-24c8fabd375b",
      "name": "Create the motivational speech"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1600,
        940
      ],
      "id": "e676dd62-2878-49a6-9358-138862462eb5",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "# 11. Upload to YouTube ⚠️\n\n⚠️ set the credentials in the `Start Youtube upload` and the `Upload video to YouTube` nodes",
        "height": 360,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        2980
      ],
      "id": "dc5a6101-6a22-49e7-9ed1-264c7b55f76b",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?part=snippet,status&uploadType=resumable",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Upload-Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "RAW/JSON",
        "body": "={\n  \"snippet\": {\n    \"title\": \"{{ $('Create the script').item.json.output.title }}\",\n    \"description\": \"{{ $('Create the script').item.json.output.description }}\",\n    \"tags\": \"\",\n    \"categoryId\": \"24\",\n    \"defaultLanguage\": \"en\",\n    \"defaultAudioLanguage\": \"en\"\n  },\n  \"status\": {\n    \"privacyStatus\": \"public\",\n    \"license\": \"youtube\",\n    \"embeddable\": true,\n    \"publicStatsViewable\": true,\n    \"madeForKids\": false\n  }\n}\n",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "87dcea56-0126-46b7-a5dc-3904bf216dff",
      "name": "Start Youtube upload",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1620,
        3100
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Download the video').item.json.headers.location }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "a05d22a2-0ce9-40e4-8713-f7b37fec766c",
      "name": "Upload video to YouTube",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2020,
        3100
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7bbb518a-c4f1-49a5-9e72-3e9d939b131b",
              "name": "vdo_factory_api_url",
              "value": "http://vdo-factory:8000",
              "type": "string"
            },
            {
              "id": "485a5788-cda6-4015-aa8d-d7b7ff012266",
              "name": "subreddit",
              "value": "selfimprovement",
              "type": "string"
            },
            {
              "id": "afa3df27-f529-452f-8976-63a0af466584",
              "name": "content_type",
              "value": "motivational speech",
              "type": "string"
            },
            {
              "id": "ddd725fb-b9f6-45d6-90df-88c50ba53a20",
              "name": "art_style",
              "value": "=Use the following prompt as a template for the image generation prompt, use the content to create a unique image for the scene.\n\nCreate a cinematic image in a dramatic, high-contrast photographic style, with a cool blue color grading. The subject is a figure [doing something, like walking under a waterfall, sitting under a tree, watching the sunset, whatever makes sense from the content's perspective], captured from a distance. The foreground should be softly blurred to focus attention on the landscape details. The mood should convey strength, wisdom, and a sense of calm determination. The overall visual should feel inspirational and dignified, resembling a powerful nature documentary scene.",
              "type": "string"
            },
            {
              "id": "79226bcb-3a26-4d30-b3a3-e578cda677f9",
              "name": "postiz_api_url",
              "value": "https://postiz.com/api/public/v1",
              "type": "string"
            },
            {
              "id": "940d954d-74de-455b-a85d-16827783fe30",
              "name": "tts_engine",
              "value": "kokoro",
              "type": "string"
            },
            {
              "id": "16d582b3-84bf-4b2c-89fa-30603ee6e0e2",
              "name": "background_music_id",
              "value": "",
              "type": "string"
            },
            {
              "id": "34f8b468-b669-46ed-be9d-e77e15f36380",
              "name": "background_music_volume",
              "value": 0.2,
              "type": "number"
            },
            {
              "id": "7ab1a1b1-702e-40a5-a6fb-800feb4d8531",
              "name": "generate_content",
              "value": "ai",
              "type": "string"
            },
            {
              "id": "1be1b5e1-1baf-4f21-8309-c02aa1437ef9",
              "name": "update_stories",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "a7b1dd3c-0109-4f88-89f9-f236e6bea8f7",
              "name": "kokoro_voice",
              "value": "af_heart",
              "type": "string"
            },
            {
              "id": "5a691031-4de0-4791-821d-4dec80388969",
              "name": "kokoro_speed",
              "value": 1,
              "type": "number"
            },
            {
              "id": "a725aaf1-c91e-4d5b-87f9-d540d309098c",
              "name": "chatterbox_exaggeration",
              "value": 0.5,
              "type": "number"
            },
            {
              "id": "d048e31d-f1cb-48ac-9ff2-13f1028c843e",
              "name": "chatterbox_cfg_weight",
              "value": 0.5,
              "type": "number"
            },
            {
              "id": "96943158-11f6-4731-9d4b-dbae0862d7ab",
              "name": "chatterbox_temperature",
              "value": 0.8,
              "type": "number"
            },
            {
              "id": "15051422-f020-4a19-a2bd-6a67e93af778",
              "name": "chatterbox_clone_voice_id",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        220
      ],
      "id": "7a519642-edf4-4e6b-81c6-2e5abe168914",
      "name": "Configure me"
    },
    {
      "parameters": {
        "content": "# Configure me ⚠️\n",
        "height": 520,
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "d7c24782-530a-4109-8be9-b35b9338ab25",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9aa0ae35-303b-40f5-8556-2af39e621abf",
              "leftValue": "={{ $('Limit').item.json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        900
      ],
      "id": "68b41981-16c8-465e-8d69-479941745ca2",
      "name": "If"
    },
    {
      "parameters": {
        "errorMessage": "No more stories! Please download more"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        720,
        740
      ],
      "id": "504aa1f9-463b-40e8-8f20-742900ad74f8",
      "name": "No more stories"
    },
    {
      "parameters": {
        "url": "={{ $json.vdo_factory_api_url }}/health",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        100
      ],
      "id": "614d06f0-4069-44db-910f-583fae7c465f",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "errorMessage": "The server is not running or isn't configured"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        460,
        360
      ],
      "id": "f81f5577-55fa-4b7b-9277-d2713142c338",
      "name": "Server isn't ready"
    },
    {
      "parameters": {
        "content": "# Test connection",
        "height": 520,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        340,
        0
      ],
      "id": "1be53423-0822-443a-9051-9f860ef91934",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "# cleanup (removing tmp files)\nif you want to delete the generated video too, add it's id to the array",
        "height": 360,
        "width": 540
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2300,
        2760
      ],
      "id": "57cd6909-b282-4ecb-a2a6-fbe1dfb277db",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27bcaf96-fcaa-41cb-8a51-436870ce2110",
              "name": "file_ids",
              "value": "={{ [...$('Combine loop items').item.json.data.map(item => [item.video_id, item.tts_id, item.image_id]).flat(), $('Configure me').item.json.chatterbox_clone_voice_id, $('Configure me').item.json.background_music_id].filter(Boolean) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2340,
        2880
      ],
      "id": "58a4049a-ab5c-4dba-bc70-6031341222be",
      "name": "Set file ids to delete"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $json.file_ids }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2660,
        2880
      ],
      "id": "f5bf2a37-19ba-4ff1-b032-b94d0fe959e0",
      "name": "Delete tmp files"
    },
    {
      "parameters": {
        "fieldToSplitOut": "file_ids",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2500,
        2880
      ],
      "id": "b1dbdced-5238-4fbc-b000-ee7951ee4f01",
      "name": "For each file"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "motivation_hub",
        "limit": 1,
        "filterType": "string",
        "filterString": "video_id=is.null"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        300,
        900
      ],
      "id": "70566ede-41f0-459a-9842-98a7f61d3364",
      "name": "Get row for processing",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "motivation_hub",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Limit').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "video_id",
              "fieldValue": "={{ $('Start merging the videos').item.json.file_id }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "generated"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1080,
        2300
      ],
      "id": "7d44f952-1c6f-45c3-ba54-98d5d66d6fde",
      "name": "Save video id to the db",
      "credentials": {
        "supabaseApi": {
          "id": "yTGA7D95MEtsyEAb",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# 12. Schedule with Postiz ⚠️\n\n⚠️ Set your Postiz API credentials in the HTTP Header Auth",
        "height": 820,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        2120
      ],
      "id": "10e7d336-80ec-4a0c-9664-39470235e5bc",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1460,
        2240
      ],
      "id": "1fc949d7-8fbc-4082-b691-1c83aada6642",
      "name": "Download the video for Postiz"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1680,
        2240
      ],
      "id": "6949cb92-94f3-4d57-840c-040a4adee614",
      "name": "Upload video to Postiz"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/integrations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1900,
        2240
      ],
      "id": "520782b2-c612-409a-9174-e3b47c78953a",
      "name": "Get Postiz integrations"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2080,
        2240
      ],
      "id": "5e78c668-93c1-4c0e-98d7-6f976d0cf1a8",
      "name": "Merge integrations"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1f7adeed-3cd0-47bb-8bf5-5887d2c82cad",
              "name": "postiz_integration_id",
              "value": "={{ $json.data.find(integration => integration.identifier === 'youtube')?.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        2720
      ],
      "id": "bac00438-2329-47e9-ad74-4170db32cfeb",
      "name": "Set integration id for YouTube"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"type\": \"schedule\",\n  \"date\": \"{{ $now.plus(1, 'days').toISO() }}\",\n  \"tags\": [],\n  \"shortLink\": false,\n  \"posts\": [\n    {\n      \"integration\": {\n        \"id\": \"{{ $json.postiz_integration_id }}\"\n      },\n      \"value\": [\n        {\n          \"content\": \"{{ $('Create the script').item.json.output.description }}\",\n          \"image\": [\n            {\n              \"id\": \"{{ $('Upload video to Postiz').item.json.id }}\",\n              \"path\": \"{{ $('Upload video to Postiz').item.json.path }}\"\n            }\n          ]\n        }\n      ],\n      \"settings\": {\n      \"title\": \"{{ $('Create the script').item.json.output.title }}\",\n      \"type\": \"unlisted\",\n      \"tags\": {{ JSON.stringify($('Create the script').item.json.output.tags.map(tag => ({ value: tag, label: tag }))) }}\n  }\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1980,
        2720
      ],
      "id": "732f2506-0ea3-4048-a633-f9c93ff5fb1f",
      "name": "Schedule YouTube video"
    },
    {
      "parameters": {
        "content": "# Setup the integration\n\nYou should implement your own logic here.\n\n1. You can hard-code the desired integration id\n2. You can filter the integrations by your own logic\n\nMake sure to modify the `settings` field if you are sharing to other platforms than YouTube",
        "height": 500,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        2420
      ],
      "id": "4fa9a54f-9742-4cd0-b7b3-6813ee798592",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -260,
        40
      ],
      "id": "8ec78562-3d56-47a1-bf41-4f43621fd54b",
      "name": "When clicking 'Execute workflow'"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "black-forest-labs/FLUX.1-schnell-Free"
            },
            {
              "name": "prompt",
              "value": "={{ $json.image_prompt }}"
            },
            {
              "name": "width",
              "value": "={{ 720 }}"
            },
            {
              "name": "height",
              "value": "={{ 1280 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        140,
        1460
      ],
      "id": "bac538f5-a0e3-49b0-bb02-ce1b6b3adc3f",
      "name": "Generate AI image",
      "alwaysOutputData": false,
      "credentials": {
        "httpBearerAuth": {
          "id": "moweCBk6GwTWmnub",
          "name": "Together AI test"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.data[0].url }}"
            },
            {
              "name": "media_type",
              "value": "image"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        1340
      ],
      "id": "7a1121c0-1c79-4d76-9f3f-4c6abdccff9f",
      "name": "Upload image to server",
      "retryOnFail": true
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        460,
        1580
      ],
      "id": "a842a81a-c84a-4e22-a8e4-fba4d533e37d",
      "name": "Wait for the error / rate limit to go away",
      "webhookId": "18721630-ff12-4eb6-8a9a-c0d229d2b66d"
    },
    {
      "parameters": {
        "content": "# 6. Generate an image with Flux ⚠️\n\n⚠️ Set your Together AI API credentials",
        "height": 520,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        1260
      ],
      "id": "e3682144-ffab-44bd-9a2c-ad9703125c39",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        140,
        900
      ],
      "id": "5f637ce3-fca1-4110-b10d-7af3cf5795d3",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "motivation_hub",
        "limit": 1,
        "filterType": "string",
        "filterString": "video_id=is.null"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -20,
        900
      ],
      "id": "13763944-00b1-4024-a893-5f76faf477da",
      "name": "Check if data exists1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "yTGA7D95MEtsyEAb",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -260,
        280
      ],
      "id": "23f5b0d0-afcd-4b6f-9bc0-267513a57780",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "channel_name",
              "name": "channel_name",
              "value": "Motivation Hub",
              "type": "string"
            },
            {
              "id": "supabase_table",
              "name": "supabase_table",
              "value": "motivation_hub",
              "type": "string"
            },
            {
              "id": "content_categories",
              "name": "content_categories",
              "value": [
                "daily motivation and inspiration",
                "personal development",
                "goal setting and achievement",
                "overcoming challenges",
                "success stories and lessons",
                "mindset transformation",
                "self-confidence building",
                "productivity and focus",
                "resilience and perseverance",
                "positive thinking"
              ],
              "type": "array"
            },
            {
              "id": "content_types",
              "name": "content_types",
              "value": [
                "motivational speech",
                "inspirational story",
                "success tip",
                "mindset shift",
                "life lesson",
                "daily reminder",
                "actionable advice"
              ],
              "type": "array"
            },
            {
              "id": "target_audience",
              "name": "target_audience",
              "value": "Young professionals, students, and anyone seeking motivation and personal growth",
              "type": "string"
            },
            {
              "id": "content_language",
              "name": "content_language",
              "value": "English",
              "type": "string"
            },
            {
              "id": "content_style",
              "name": "content_style",
              "value": "uplifting, empowering, practical, and action-oriented",
              "type": "string"
            },
            {
              "id": "content_length",
              "name": "content_length",
              "value": "60-90 seconds when spoken",
              "type": "string"
            },
            {
              "id": "batch_size",
              "name": "batch_size",
              "value": 5,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -220,
        -600
      ],
      "id": "e76ea154-483d-4192-ade7-1ae3eff0d508",
      "name": "Channel Configuration"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "GPT-4.1-NANO"
        },
        "messages": {
          "values": [
            {
              "content": "You are an expert content creator specializing in engaging YouTube content. You understand both Thai and international audiences and can create content that resonates with specific target demographics.",
              "role": "system"
            },
            {
              "content": "={{ 'Create ' + $('Channel Configuration').item.json.batch_size + ' different compelling YouTube video content pieces for the channel: ' + $('Channel Configuration').item.json.channel_name + '\\n\\n' + 'Channel Focus: ' + $('Channel Configuration').item.json.content_categories.join(', ') + '\\n' + 'Content Types: ' + $('Channel Configuration').item.json.content_types.join(', ') + '\\n' + 'Target Audience: ' + $('Channel Configuration').item.json.target_audience + '\\n' + 'Content Style: ' + $('Channel Configuration').item.json.content_style + '\\n' + 'Video Length: ' + $('Channel Configuration').item.json.content_length + '\\n\\n' + 'Requirements:\\n' + '- Create ' + $('Channel Configuration').item.json.batch_size + ' unique video concepts\\n' + '- Each should have strong YouTube appeal (clickable titles)\\n' + '- Content should be practical and engaging\\n' + '- Consider trending topics in tech/digital space\\n' + '- Make titles SEO-friendly for YouTube search\\n' + '- Include clear value proposition in each video\\n\\n' + 'Format your response exactly as:\\n\\n' + 'VIDEO_1:\\n' + 'TITLE: [Compelling YouTube video title with strong hook]\\n' + 'CONTENT: [Complete video script with clear structure: intro hook, main content, conclusion]\\n\\n' + 'VIDEO_2:\\n' + 'TITLE: [Next video title]\\n' + 'CONTENT: [Next video script]\\n\\n' + 'Continue for all ' + $('Channel Configuration').item.json.batch_size + ' videos' }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -120,
        -760
      ],
      "id": "690c019c-bd94-4c97-af95-28df3c04e5a3",
      "name": "Generate Video Content",
      "credentials": {
        "openAiApi": {
          "id": "AA65xz9Vi0Pnrj5E",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ทำความสะอาด content ก่อน\nconst rawContent = $input.first().json.message.content;\nconst cleanedContent = rawContent\n  .replace(/\\*/g, '')    // ลบเฉพาะ * ตัวเดียว\n  .trim();               // ตัด space หน้า-หลัง\n\n// ดึงข้อมูล channel จาก config\nconst channelConfig = $('Channel Configuration').item.json;\n\n// Split เป็นแต่ละวิดีโอ\nconst videoPieces = cleanedContent.split(/VIDEO_\\d+:/i);\nconst results = [];\n\nvideoPieces.forEach((piece, index) => {\n  if (piece.trim() && index > 0) { // skip first empty piece\n    // Parse แต่ละวิดีโอ\n    const titleMatch = piece.match(/TITLE:\\s*([^\\n]*)/i);\n    const contentMatch = piece.match(/CONTENT:\\s*([\\s\\S]*?)(?=VIDEO_|$)/i);\n    \n    const title = titleMatch ? titleMatch[1].trim() : `Video Content ${index}`;\n    const content = contentMatch ? contentMatch[1].trim().replace(/\\\\n/g, '\\n') : '';\n    \n    // คำนวณ word count (ประมาณ)\n    const wordCount = content.split(' ').filter(word => word.length > 0).length;\n    \n    results.push({\n      title: title,\n      content: content,\n      status: 'draft',\n      channel_id: channelConfig.channel_id,\n      channel_name: channelConfig.channel_name,\n      word_count: wordCount,\n      estimated_duration_seconds: Math.round(wordCount * 0.5), // Thai content speaks slower\n      created_at: new Date().toISOString()\n    });\n  }\n});\n\n// Return array of items\nreturn results.map(item => ({ json: item }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        -500
      ],
      "id": "c106ebb1-4d23-49cc-ad2f-54c006fb0621",
      "name": "Parse Video Content"
    },
    {
      "parameters": {
        "tableId": "={{ $('Channel Configuration').item.json.supabase_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.content }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $json.status }}"
            },
            {
              "fieldId": "word_count",
              "fieldValue": "={{ $json.word_count }}"
            },
            {
              "fieldId": "estimated_duration_seconds",
              "fieldValue": "={{ $json.estimated_duration_seconds }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $json.created_at }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        380,
        -600
      ],
      "id": "87f576eb-8999-45e3-9803-c39346baac38",
      "name": "Save to Channel Table",
      "credentials": {
        "supabaseApi": {
          "id": "MjvtAjWTwzxms326",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        580,
        -600
      ],
      "id": "f01b3b7c-40c9-40a4-afb8-6ba4d65cfb55",
      "name": "Aggregate Results"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "summary",
              "name": "summary",
              "value": "={{ '🎬 Video Content Generation Complete!\\n\\n' + '📺 Channel: ' + $('Channel Configuration').item.json.channel_name + '\\n' + '📊 Table: ' + $('Channel Configuration').item.json.supabase_table + '\\n' + '🌐 Language: ' + $('Channel Configuration').item.json.content_language + '\\n' + '📝 Generated: ' + $('Aggregate Results').item.json.data.length + ' video scripts\\n' + '⏱️ Total Duration: ~' + Math.round($('Aggregate Results').item.json.data.reduce((sum, item) => sum + (item.estimated_duration_seconds || 0), 0) / 60) + ' minutes of content\\n\\n' + '📋 Generated Video Titles:\\n' + $('Aggregate Results').item.json.data.map((item, index) => (index + 1) + '. ' + item.title).join('\\n') + '\\n\\n' + '✅ All content saved with status: draft\\n' + '🔄 Ready for video generation workflow!' }}",
              "type": "string"
            },
            {
              "id": "total_videos",
              "name": "total_videos",
              "value": "={{ $('Aggregate Results').item.json.data.length }}",
              "type": "number"
            },
            {
              "id": "channel_info",
              "name": "channel_info",
              "value": "={{ { channel_name: $('Channel Configuration').item.json.channel_name, table_name: $('Channel Configuration').item.json.supabase_table, language: $('Channel Configuration').item.json.content_language } }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        780,
        -600
      ],
      "id": "ad9944e1-84b2-47b1-9f62-e8f3a34426b3",
      "name": "Create Channel Report"
    },
    {
      "parameters": {
        "content": "",
        "width": 2040,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        -280
      ],
      "id": "5f706909-7d07-4920-86ad-fbaf0bbe370d",
      "name": "Sticky Note3"
    }
  ],
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Combine loop items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of TTS generation": {
      "main": [
        [
          {
            "node": "TTS status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS status switch": {
      "main": [
        [
          {
            "node": "Setup TTS file_id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating captioned TTS video": {
      "main": [
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get video generation status": {
      "main": [
        [
          {
            "node": "Video generation switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video generation switch": {
      "main": [
        [
          {
            "node": "Setup media fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup media fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine loop items": {
      "main": [
        [
          {
            "node": "Start merging the videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start merging the videos": {
      "main": [
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of the video merge": {
      "main": [
        [
          {
            "node": "Video merge status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video merge status switch": {
      "main": [
        [
          {
            "node": "Save video id to the db",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup final video download URL": {
      "main": [
        [
          {
            "node": "Download the video for Postiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the TTS gets generated": {
      "main": [
        [
          {
            "node": "Get status of TTS generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating TTS (chatterbox)": {
      "main": [
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the video gets generated": {
      "main": [
        [
          {
            "node": "Get video generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the videos gets merged together": {
      "main": [
        [
          {
            "node": "Get status of the video merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS switch": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup TTS file_id": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup text": {
      "main": [
        [
          {
            "node": "Create the script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create the motivational speech",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Create the script",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Global TTS audio id": {
      "main": [
        [
          {
            "node": "Start generating captioned TTS video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video": {
      "main": [
        [
          {
            "node": "Upload video to YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the script": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the motivational speech": {
      "main": [
        [
          {
            "node": "Cleanup text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video to YouTube": {
      "main": [
        [
          {
            "node": "Set file ids to delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure me": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No more stories",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create the motivational speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Check if data exists1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Server isn't ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set file ids to delete": {
      "main": [
        [
          {
            "node": "For each file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For each file": {
      "main": [
        [
          {
            "node": "Delete tmp files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row for processing": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save video id to the db": {
      "main": [
        [
          {
            "node": "Setup final video download URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video for Postiz": {
      "main": [
        [
          {
            "node": "Upload video to Postiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video to Postiz": {
      "main": [
        [
          {
            "node": "Get Postiz integrations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Postiz integrations": {
      "main": [
        [
          {
            "node": "Merge integrations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge integrations": {
      "main": [
        [
          {
            "node": "Set integration id for YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set integration id for YouTube": {
      "main": [
        [
          {
            "node": "Schedule YouTube video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule YouTube video": {
      "main": [
        [
          {
            "node": "Setup final video download URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking 'Execute workflow'": {
      "main": [
        [
          {
            "node": "Configure me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI image": {
      "main": [
        [
          {
            "node": "Upload image to server",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for the error / rate limit to go away",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload image to server": {
      "main": [
        [
          {
            "node": "TTS switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the error / rate limit to go away": {
      "main": [
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Get row for processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if data exists1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Configuration": {
      "main": [
        [
          {
            "node": "Generate Video Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Video Content": {
      "main": [
        [
          {
            "node": "Parse Video Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Video Content": {
      "main": [
        [
          {
            "node": "Save to Channel Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Channel Table": {
      "main": [
        [
          {
            "node": "Aggregate Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Results": {
      "main": [
        [
          {
            "node": "Create Channel Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "339979314200287f32affa09285453b9225a94604e8beacf6d02da846d7818bd"
  }
}
