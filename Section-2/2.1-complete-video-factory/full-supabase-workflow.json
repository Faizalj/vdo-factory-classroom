{
  "name": "Full Supabase Video Factory",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -340,
        1220
      ],
      "id": "2981fcd1-0816-4524-ae71-f753ec3ea0e4",
      "name": "Limit"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1000,
        1880
      ],
      "id": "9057a663-50f1-48d6-9962-c961da8f7a41",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start generating TTS (chatterbox)').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        940,
        1880
      ],
      "id": "6bda2ca7-205b-400a-88a0-29882346cced",
      "name": "Get status of TTS generation",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1100,
        1880
      ],
      "id": "975260df-bba0-4649-81ac-11dc16f46117",
      "name": "TTS status switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/video-tools/generate/tts-captioned-video",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "specifyBody": "string",
        "body": "={{ \n\n[\n  `background_id=${$('Upload image to server').item.json.file_id}`,\n  $json.tts_audio_id ? `audio_id=${$json.tts_audio_id}` : false,\n  $json.tts_audio_id ? '' : `text=${encodeURIComponent($('Loop Over Items').item.json.text)}`,\n  $json.tts_audio_id ? '' :  `kokoro_voice=${$('Configure me').item.json.kokoro_voice}`,\n  $json.tts_audio_id ? '' : `kokoro_speed=${$('Configure me').item.json.kokoro_speed}`\n].filter(Boolean).join('&') \n\n}}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1800,
        1740
      ],
      "id": "019dd453-d8cc-4d48-8454-717691f56a16",
      "name": "Start generating captioned TTS video"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start generating captioned TTS video').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2220,
        1740
      ],
      "id": "91a5861d-cb1e-4f7b-8661-eb6c44af9567",
      "name": "Get video generation status",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2400,
        1740
      ],
      "id": "33e38bc9-a4b0-42fd-a254-6a8f3307f257",
      "name": "Video generation switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a7fdacca-749e-4f69-84fd-50075e0e3409",
              "name": "video_id",
              "value": "={{ $('Start generating captioned TTS video').item.json.file_id }}",
              "type": "string"
            },
            {
              "id": "6c99c267-5c41-4697-ba19-b51d9e8c9a4e",
              "name": "tts_id",
              "value": "={{ $('Global TTS audio id').item.json.tts_audio_id }}",
              "type": "string"
            },
            {
              "id": "21dd08a7-f785-4829-8609-a99950f21572",
              "name": "image_id",
              "value": "={{ $('Upload image to server').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2660,
        1940
      ],
      "id": "a2848e6f-66a5-4712-827e-ee591152f790",
      "name": "Setup media fields"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -960,
        2560
      ],
      "id": "ba49f973-ca3d-4288-b487-e34e7a5ed7df",
      "name": "Combine loop items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/video-tools/merge",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_ids",
              "value": "={{ $json.data.map(item => item.video_id).join(',') }}"
            },
            {
              "name": "background_music_id",
              "value": "={{ $('Configure me').item.json.background_music_id }}"
            },
            {
              "name": "background_music_volume",
              "value": "={{ $('Configure me').item.json.background_music_volume }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -760,
        2560
      ],
      "id": "eb01f97e-da41-4ee8-804f-575674f1e115",
      "name": "Start merging the videos"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -340,
        2560
      ],
      "id": "a99a4730-d8f8-4302-bdec-66a0aac10a74",
      "name": "Get status of the video merge"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -160,
        2560
      ],
      "id": "59dab5b6-a9a3-42df-8921-d662cb8a6aff",
      "name": "Video merge status switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13b0dde8-b067-41d2-b7c2-fa5addf56a25",
              "name": "download_url",
              "value": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        660,
        3420
      ],
      "id": "828a4159-fcad-45c8-9287-a67cdfd3ba0c",
      "name": "Setup final video download URL"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        760,
        1880
      ],
      "id": "358ff748-aac8-4587-b598-a72341cb7456",
      "name": "Wait until the TTS gets generated",
      "webhookId": "83468f41-991c-46ac-bd23-c092b5fa2009"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/audio-tools/tts/chatterbox",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Loop Over Items').item.json.text }}"
            },
            {
              "name": "sample_audio_id",
              "value": "={{ $('Configure me').item.json.chatterbox_clone_voice_id ?? '' }}"
            },
            {
              "name": "exaggeration",
              "value": "={{ $('Configure me').item.json.chatterbox_exaggeration }}"
            },
            {
              "name": "cfg_weight",
              "value": "={{ $('Configure me').item.json.chatterbox_cfg_weight }}"
            },
            {
              "name": "temperature",
              "value": "={{ $('Configure me').item.json.chatterbox_temperature }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        1880
      ],
      "id": "63d0afb6-9f33-4264-a01f-f6de6c1dfd92",
      "name": "Start generating TTS (chatterbox)"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2000,
        1740
      ],
      "id": "4f140d8f-01a8-4a26-b236-39ca618b5406",
      "name": "Wait until the video gets generated",
      "webhookId": "f5d2f68d-7349-467f-91ba-a764081269eb"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -540,
        2560
      ],
      "id": "17c771be-789b-45c0-8cf4-dbbfa717d27d",
      "name": "Wait until the videos gets merged together",
      "webhookId": "b7d7d8f6-b8f7-4b05-b943-ae3f202063a5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Configure me').item.json.tts_engine }}",
                    "rightValue": "kokoro",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5ae108d7-13b2-41aa-ab18-45a80515ad51"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "kokoro"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a3dbceb9-96f7-4f78-b5e4-81bd6cb9a422",
                    "leftValue": "={{ $('Configure me').item.json.tts_engine }}",
                    "rightValue": "chatterbox",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chatterbox"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        360,
        1760
      ],
      "id": "5e4e2e43-4f37-41b2-bc56-0e6af4e882f0",
      "name": "TTS switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d41f1ef6-7591-41b7-805d-94b58caba5c4",
              "name": "tts_audio_id",
              "value": "={{ $('Start generating TTS (chatterbox)').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        1860
      ],
      "id": "aef38e1b-1579-4a5b-918f-27e1480324da",
      "name": "Setup TTS file_id"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87d65a77-d25e-42b2-86ac-7b1c4efb2990",
              "name": "text",
              "value": "={{ $json.text.includes(\"<think>\") ? $json.text.split(\"</think>\")[1].trim() : $json.text.trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        1100
      ],
      "id": "b8dc8155-c3b7-4c06-98ac-18dd85240426",
      "name": "Cleanup text"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        340,
        1280
      ],
      "id": "1c76fc05-0d8c-4890-adca-9b11dbad6512",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "AA65xz9Vi0Pnrj5E",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68de9e0e-e234-4509-a57a-4c4c42590620",
              "name": "tts_audio_id",
              "value": "={{ $json.tts_audio_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        1740
      ],
      "id": "7783d4a0-54cc-4059-8ac8-3840121fe088",
      "name": "Global TTS audio id"
    },
    {
      "parameters": {
        "content": "# 4. Pick a story ⚠️\n\n⚠️ set credentials in the  Supabase node and select \nthe right database",
        "height": 400,
        "width": 980
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        1000
      ],
      "id": "9a0c37f8-1647-4ea3-bc79-00fadc4c9a93",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 5. Create script from the story",
        "height": 400,
        "width": 880
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        1000
      ],
      "id": "5781af97-8ddf-4b53-bb54-478a25fd346d",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 9. Merge the videos",
        "height": 360,
        "width": 1180
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1060,
        2440
      ],
      "id": "b6b2b2ad-06cf-47af-8050-47d398d6fa53",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# 7. Create speech from text",
        "height": 520,
        "width": 1200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        1600
      ],
      "id": "c5ada0bb-76cb-4d0a-8957-3c6ecc5a42cf",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# 8. Generate captioned video",
        "height": 520,
        "width": 1240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1560,
        1600
      ],
      "id": "34e609ea-17d6-485e-96e6-9fcc2b5bbc91",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# 10. Save to the database ⚠️\n\n⚠️ set credentials in the Supabase node and select \nthe right database",
        "height": 360,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        180,
        2440
      ],
      "id": "bb4f52c6-f51b-4341-8e8c-30994f0ad0bf",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "url": "={{ $('Setup final video download URL').item.json.download_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        3420
      ],
      "id": "91b3bfe8-eea4-4304-b9fe-6735d31014ab",
      "name": "Download the video"
    },
    {
      "parameters": {
        "text": "=<Instructions>\nBreak up the text to multiple chunks that I can use for generating a youtube video, and for each chunk add an image generation prompt.\n\nAlso create a title and a description for the video.\n\nUse the following art style for the image prompts:\n\nArt style:\n{{ $('Configure me').item.json.art_style }}\n\nFormat the response to include all required fields: scenes, title, description, and tags.\n\n</Instructions>\n\n<Text>\n{{ $json.text }}\n</Text>\n\n/nothink",
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scenes\": {\n            \"type\": \"array\",\n            \"description\": \"user name\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"text\": {\n                        \"type\": \"string\",\n                        \"description\": \"the text of the scene, it will be used for TTS\"\n                    },\n                    \"image_prompt\": {\n                        \"type\": \"string\",\n                        \"description\": \"prompt for image generation\"\n                    }\n                },\n                \"required\": [\n                    \"text\",\n                    \"image_prompt\"\n                ]\n            }\n        },\n        \"title\": {\n            \"type\": \"string\",\n            \"description\": \"the title of the youtube video\"\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"the description of the youtube video\"\n        },\n        \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"tags for sharing the video on youtube\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    },\n    \"required\": [\n        \"scenes\",\n        \"title\",\n        \"description\",\n        \"tags\"\n    ]\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.1,
      "position": [
        680,
        1100
      ],
      "id": "a7038544-e2ba-4639-aba1-1ba85b936e9c",
      "name": "Create the script"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Instructions>\nUsing the below content, create 10s-60s long {{ $('Configure me').item.json.content_type }}.\nThe generated script will be used in a YouTube video. the script sould have hook and call to action (CTA)\nReturn clear text, no markdowns or any other styling is needed.\n</Instructions>\n\n<Post>\n{{ $('Limit').item.json.title }}\n\n{{ $('Limit').item.json.content }}\n</Post>\n\n/nothink",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        220,
        1100
      ],
      "id": "55c46007-6829-4bd4-a5be-1ab9084e18ad",
      "name": "Create the motivational speech"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        840,
        1260
      ],
      "id": "ac961f32-8add-4a9f-ac14-04c9786f904d",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "# 11. Upload to YouTube ⚠️\n\n⚠️ set the credentials in the `Start Youtube upload` and the `Upload video to YouTube` nodes",
        "height": 360,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        3300
      ],
      "id": "8f83c25c-f238-4341-981f-a4f309567ac0",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?part=snippet,status&uploadType=resumable",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Upload-Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "RAW/JSON",
        "body": "={\n  \"snippet\": {\n    \"title\": \"{{ $('Create the script').item.json.output.title }}\",\n    \"description\": \"{{ $('Create the script').item.json.output.description }}\",\n    \"tags\": \"\",\n    \"categoryId\": \"24\",\n    \"defaultLanguage\": \"en\",\n    \"defaultAudioLanguage\": \"en\"\n  },\n  \"status\": {\n    \"privacyStatus\": \"public\",\n    \"license\": \"youtube\",\n    \"embeddable\": true,\n    \"publicStatsViewable\": true,\n    \"madeForKids\": false\n  }\n}\n",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "ca39000d-4c5f-478c-ae09-e965fdcc3b1e",
      "name": "Start Youtube upload",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        860,
        3420
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Download the video').item.json.headers.location }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "c0ba9680-5f40-463a-9290-f4a8c4d7594c",
      "name": "Upload video to YouTube",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1260,
        3420
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7bbb518a-c4f1-49a5-9e72-3e9d939b131b",
              "name": "vdo_factory_api_url",
              "value": "http://vdo-factory:8000",
              "type": "string"
            },
            {
              "id": "485a5788-cda6-4015-aa8d-d7b7ff012266",
              "name": "subreddit",
              "value": "selfimprovement",
              "type": "string"
            },
            {
              "id": "afa3df27-f529-452f-8976-63a0af466584",
              "name": "content_type",
              "value": "motivational speech",
              "type": "string"
            },
            {
              "id": "ddd725fb-b9f6-45d6-90df-88c50ba53a20",
              "name": "art_style",
              "value": "=Use the following prompt as a template for the image generation prompt, use the content to create a unique image for the scene.\n\nCreate a cinematic image in a dramatic, high-contrast photographic style, with a cool blue color grading. The subject is a figure [doing something, like walking under a waterfall, sitting under a tree, watching the sunset, whatever makes sense from the content's perspective], captured from a distance. The foreground should be softly blurred to focus attention on the landscape details. The mood should convey strength, wisdom, and a sense of calm determination. The overall visual should feel inspirational and dignified, resembling a powerful nature documentary scene.",
              "type": "string"
            },
            {
              "id": "79226bcb-3a26-4d30-b3a3-e578cda677f9",
              "name": "postiz_api_url",
              "value": "https://postiz.com/api/public/v1",
              "type": "string"
            },
            {
              "id": "940d954d-74de-455b-a85d-16827783fe30",
              "name": "tts_engine",
              "value": "kokoro",
              "type": "string"
            },
            {
              "id": "16d582b3-84bf-4b2c-89fa-30603ee6e0e2",
              "name": "background_music_id",
              "value": "",
              "type": "string"
            },
            {
              "id": "34f8b468-b669-46ed-be9d-e77e15f36380",
              "name": "background_music_volume",
              "value": 0.2,
              "type": "number"
            },
            {
              "id": "7ab1a1b1-702e-40a5-a6fb-800feb4d8531",
              "name": "generate_content",
              "value": "ai",
              "type": "string"
            },
            {
              "id": "1be1b5e1-1baf-4f21-8309-c02aa1437ef9",
              "name": "update_stories",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "a7b1dd3c-0109-4f88-89f9-f236e6bea8f7",
              "name": "kokoro_voice",
              "value": "af_heart",
              "type": "string"
            },
            {
              "id": "5a691031-4de0-4791-821d-4dec80388969",
              "name": "kokoro_speed",
              "value": 1,
              "type": "number"
            },
            {
              "id": "a725aaf1-c91e-4d5b-87f9-d540d309098c",
              "name": "chatterbox_exaggeration",
              "value": 0.5,
              "type": "number"
            },
            {
              "id": "d048e31d-f1cb-48ac-9ff2-13f1028c843e",
              "name": "chatterbox_cfg_weight",
              "value": 0.5,
              "type": "number"
            },
            {
              "id": "96943158-11f6-4731-9d4b-dbae0862d7ab",
              "name": "chatterbox_temperature",
              "value": 0.8,
              "type": "number"
            },
            {
              "id": "15051422-f020-4a19-a2bd-6a67e93af778",
              "name": "chatterbox_clone_voice_id",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -660,
        540
      ],
      "id": "340610bb-a7bd-468b-a3e9-b6b1177dc9bd",
      "name": "Configure me"
    },
    {
      "parameters": {
        "content": "# Configure me ⚠️\n",
        "height": 520,
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -760,
        320
      ],
      "id": "381222ea-6194-4fd8-aa2f-f2848e396f9e",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9aa0ae35-303b-40f5-8556-2af39e621abf",
              "leftValue": "={{ $('Limit').item.json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        1220
      ],
      "id": "c6998174-2fc1-481f-8514-ca91c3b8b0ec",
      "name": "If"
    },
    {
      "parameters": {
        "errorMessage": "No more stories! Please download more"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -40,
        1060
      ],
      "id": "2d7188a3-bb57-4875-b90c-74ac58f1abf6",
      "name": "No more stories"
    },
    {
      "parameters": {
        "url": "={{ $json.vdo_factory_api_url }}/health",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        420
      ],
      "id": "199b96dc-a060-49da-97d8-88751c7c0fef",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "errorMessage": "The server is not running or isn't configured"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -300,
        680
      ],
      "id": "6955a1b4-6399-4ec8-9576-ed24a384aabc",
      "name": "Server isn't ready"
    },
    {
      "parameters": {
        "content": "# Test connection",
        "height": 520,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -420,
        320
      ],
      "id": "d3a39eb1-057d-4e21-a234-0b28f5f2ceb3",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "# cleanup (removing tmp files)\nif you want to delete the generated video too, add it's id to the array",
        "height": 360,
        "width": 540
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        3080
      ],
      "id": "6c17e842-b965-45ff-b613-e637a88a9ea6",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27bcaf96-fcaa-41cb-8a51-436870ce2110",
              "name": "file_ids",
              "value": "={{ [...$('Combine loop items').item.json.data.map(item => [item.video_id, item.tts_id, item.image_id]).flat(), $('Configure me').item.json.chatterbox_clone_voice_id, $('Configure me').item.json.background_music_id].filter(Boolean) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1580,
        3200
      ],
      "id": "40aeaeb5-8991-4007-9e6c-c63e845a8e6c",
      "name": "Set file ids to delete"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $json.file_ids }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1900,
        3200
      ],
      "id": "f88e83d5-fd97-4fa1-be40-43837742fbef",
      "name": "Delete tmp files"
    },
    {
      "parameters": {
        "fieldToSplitOut": "file_ids",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1740,
        3200
      ],
      "id": "4f095720-c67c-405b-beeb-491a9a644801",
      "name": "For each file"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "motivation_hub",
        "limit": 1,
        "filterType": "string",
        "filterString": "video_id=is.null"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -460,
        1220
      ],
      "id": "0b4efff8-b15d-44fd-9f47-ebec27750739",
      "name": "Get row for processing",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "your-supabase-credentials-id",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "motivation_hub",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Limit').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "video_id",
              "fieldValue": "={{ $('Start merging the videos').item.json.file_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        320,
        2620
      ],
      "id": "cd55280d-9aeb-4d89-a225-fd4d77382bbd",
      "name": "Save video id to the db",
      "credentials": {
        "supabaseApi": {
          "id": "your-supabase-credentials-id",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "content": "# 12. Schedule with Postiz ⚠️\n\n⚠️ Set your Postiz API credentials in the HTTP Header Auth",
        "height": 820,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        2440
      ],
      "id": "18f2b8d6-465e-4721-9d68-3b6dd70b63e4",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        2560
      ],
      "id": "9c6160d6-fb39-4437-a541-8f24bd1a16d2",
      "name": "Download the video for Postiz"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        920,
        2560
      ],
      "id": "058243e1-37e3-49a0-9d45-c568e351e95a",
      "name": "Upload video to Postiz",
      "credentials": {
        "httpHeaderAuth": {
          "id": "your-postiz-api-key",
          "name": "Postiz API Key"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/integrations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1140,
        2560
      ],
      "id": "989f99d1-43e4-44a7-8782-ebcebb9e321c",
      "name": "Get Postiz integrations",
      "credentials": {
        "httpHeaderAuth": {
          "id": "your-postiz-api-key",
          "name": "Postiz API Key"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1320,
        2560
      ],
      "id": "3c1aa552-2fc7-4e3c-afd7-03e1f8aeafe9",
      "name": "Merge integrations"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1f7adeed-3cd0-47bb-8bf5-5887d2c82cad",
              "name": "postiz_integration_id",
              "value": "={{ $json.data.find(integration => integration.identifier === 'youtube')?.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        680,
        3040
      ],
      "id": "5f940ecf-9aed-4d0b-98ea-159eba6e50ea",
      "name": "Set integration id for YouTube"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.postiz_api_url }}/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"type\": \"schedule\",\n  \"date\": \"{{ $now.plus(1, 'days').toISO() }}\",\n  \"tags\": [],\n  \"shortLink\": false,\n  \"posts\": [\n    {\n      \"integration\": {\n        \"id\": \"{{ $json.postiz_integration_id }}\"\n      },\n      \"value\": [\n        {\n          \"content\": \"{{ $('Create the script').item.json.output.description }}\",\n          \"image\": [\n            {\n              \"id\": \"{{ $('Upload video to Postiz').item.json.id }}\",\n              \"path\": \"{{ $('Upload video to Postiz').item.json.path }}\"\n            }\n          ]\n        }\n      ],\n      \"settings\": {\n      \"title\": \"{{ $('Create the script').item.json.output.title }}\",\n      \"type\": \"unlisted\",\n      \"tags\": {{ JSON.stringify($('Create the script').item.json.output.tags.map(tag => ({ value: tag, label: tag }))) }}\n  }\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        3040
      ],
      "id": "c7a34d5a-77d6-486c-b286-8b31f7b3fe7c",
      "name": "Schedule YouTube video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "your-postiz-api-key",
          "name": "Postiz API Key"
        }
      }
    },
    {
      "parameters": {
        "content": "# Setup the integration\n\nYou should implement your own logic here.\n\n1. You can hard-code the desired integration id\n2. You can filter the integrations by your own logic\n\nMake sure to modify the `settings` field if you are sharing to other platforms than YouTube",
        "height": 500,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        2740
      ],
      "id": "e8bb2030-b86f-4e4d-90fe-31cd52674a44",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1020,
        360
      ],
      "id": "f4ae14e0-7178-4cfb-bdf6-8acfa3770c75",
      "name": "When clicking 'Execute workflow'"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "black-forest-labs/FLUX.1-schnell-Free"
            },
            {
              "name": "prompt",
              "value": "={{ $json.image_prompt }}"
            },
            {
              "name": "width",
              "value": "={{ 720 }}"
            },
            {
              "name": "height",
              "value": "={{ 1280 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -620,
        1780
      ],
      "id": "ce6317e6-0088-4f2e-94a5-0e469e06d859",
      "name": "Generate AI image",
      "alwaysOutputData": false,
      "credentials": {
        "httpBearerAuth": {
          "id": "your-together-ai-credentials",
          "name": "Together AI API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.vdo_factory_api_url }}/api/v1/media/storage",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.data[0].url }}"
            },
            {
              "name": "media_type",
              "value": "image"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        1660
      ],
      "id": "354c6e44-eefd-4b2d-ba0d-4dc5b95986cd",
      "name": "Upload image to server",
      "retryOnFail": true
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -300,
        1900
      ],
      "id": "a0ed3ad7-3395-4d64-bcf9-fac4b97c8c2e",
      "name": "Wait for the error / rate limit to go away",
      "webhookId": "18721630-ff12-4eb6-8a9a-c0d229d2b66d"
    },
    {
      "parameters": {
        "content": "# 6. Generate an image with Flux ⚠️\n\n⚠️ Set your Together AI API credentials",
        "height": 520,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -740,
        1580
      ],
      "id": "77d6b62a-6533-4ef4-85fe-fd11e9270dfc",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -620,
        1220
      ],
      "id": "1cc1abb7-3824-4c42-8e7f-2f24c4c2560a",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "motivation_hub",
        "limit": 1,
        "filterType": "string",
        "filterString": "video_id=is.null"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -780,
        1220
      ],
      "id": "85ddcb1e-44e7-4994-be94-06116ac69cc0",
      "name": "Check if data exists1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "your-supabase-credentials-id",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 80,
        "width": 2800,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1360,
        120
      ],
      "id": "4c8adc5f-3413-44f2-bf98-7738595edc9e",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1020,
        600
      ],
      "id": "2095c4d4-51a5-47ea-813d-cda5cdae54aa",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "channel_name",
              "name": "channel_name",
              "value": "Motivation Hub",
              "type": "string"
            },
            {
              "id": "supabase_table",
              "name": "supabase_table",
              "value": "motivation_hub",
              "type": "string"
            },
            {
              "id": "content_categories",
              "name": "content_categories",
              "value": [
                "daily motivation and inspiration",
                "personal development",
                "goal setting and achievement",
                "overcoming challenges",
                "success stories and lessons",
                "mindset transformation",
                "self-confidence building",
                "productivity and focus",
                "resilience and perseverance",
                "positive thinking"
              ],
              "type": "array"
            },
            {
              "id": "content_types",
              "name": "content_types",
              "value": [
                "motivational speech",
                "inspirational story",
                "success tip",
                "mindset shift",
                "life lesson",
                "daily reminder",
                "actionable advice"
              ],
              "type": "array"
            },
            {
              "id": "target_audience",
              "name": "target_audience",
              "value": "Young professionals, students, and anyone seeking motivation and personal growth",
              "type": "string"
            },
            {
              "id": "content_language",
              "name": "content_language",
              "value": "English",
              "type": "string"
            },
            {
              "id": "content_style",
              "name": "content_style",
              "value": "uplifting, empowering, practical, and action-oriented",
              "type": "string"
            },
            {
              "id": "content_length",
              "name": "content_length",
              "value": "60-90 seconds when spoken",
              "type": "string"
            },
            {
              "id": "batch_size",
              "name": "batch_size",
              "value": 5,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        -200
      ],
      "id": "afd4d74a-f3a3-430a-b4e6-b95c53b270fd",
      "name": "Channel Configuration"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "GPT-4.1-NANO"
        },
        "messages": {
          "values": [
            {
              "content": "You are an expert content creator specializing in engaging YouTube content. You understand both Thai and international audiences and can create content that resonates with specific target demographics.",
              "role": "system"
            },
            {
              "content": "={{ 'Create ' + $('Channel Configuration').item.json.batch_size + ' different compelling YouTube video content pieces for the channel: ' + $('Channel Configuration').item.json.channel_name + '\\n\\n' + 'Channel Focus: ' + $('Channel Configuration').item.json.content_categories.join(', ') + '\\n' + 'Content Types: ' + $('Channel Configuration').item.json.content_types.join(', ') + '\\n' + 'Target Audience: ' + $('Channel Configuration').item.json.target_audience + '\\n' + 'Content Style: ' + $('Channel Configuration').item.json.content_style + '\\n' + 'Video Length: ' + $('Channel Configuration').item.json.content_length + '\\n\\n' + 'Requirements:\\n' + '- Create ' + $('Channel Configuration').item.json.batch_size + ' unique video concepts\\n' + '- Each should have strong YouTube appeal (clickable titles)\\n' + '- Content should be practical and engaging\\n' + '- Consider trending topics in tech/digital space\\n' + '- Make titles SEO-friendly for YouTube search\\n' + '- Include clear value proposition in each video\\n\\n' + 'Format your response exactly as:\\n\\n' + 'VIDEO_1:\\n' + 'TITLE: [Compelling YouTube video title with strong hook]\\n' + 'CONTENT: [Complete video script with clear structure: intro hook, main content, conclusion]\\n\\n' + 'VIDEO_2:\\n' + 'TITLE: [Next video title]\\n' + 'CONTENT: [Next video script]\\n\\n' + 'Continue for all ' + $('Channel Configuration').item.json.batch_size + ' videos' }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -900,
        -360
      ],
      "id": "6db8c865-4f69-4cd1-8b91-46a491339509",
      "name": "Generate Video Content",
      "credentials": {
        "openAiApi": {
          "id": "your-openai-credentials-id",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ทำความสะอาด content ก่อน\nconst rawContent = $input.first().json.message.content;\nconst cleanedContent = rawContent\n  .replace(/\\*/g, '')    // ลบเฉพาะ * ตัวเดียว\n  .trim();               // ตัด space หน้า-หลัง\n\n// ดึงข้อมูล channel จาก config\nconst channelConfig = $('Channel Configuration').item.json;\n\n// Split เป็นแต่ละวิดีโอ\nconst videoPieces = cleanedContent.split(/VIDEO_\\d+:/i);\nconst results = [];\n\nvideoPieces.forEach((piece, index) => {\n  if (piece.trim() && index > 0) { // skip first empty piece\n    // Parse แต่ละวิดีโอ\n    const titleMatch = piece.match(/TITLE:\\s*([^\\n]*)/i);\n    const contentMatch = piece.match(/CONTENT:\\s*([\\s\\S]*?)(?=VIDEO_|$)/i);\n    \n    const title = titleMatch ? titleMatch[1].trim() : `Video Content ${index}`;\n    const content = contentMatch ? contentMatch[1].trim().replace(/\\\\n/g, '\\n') : '';\n    \n    // คำนวณ word count (ประมาณ)\n    const wordCount = content.split(' ').filter(word => word.length > 0).length;\n    \n    results.push({\n      title: title,\n      content: content,\n      status: 'draft',\n      channel_id: channelConfig.channel_id,\n      channel_name: channelConfig.channel_name,\n      word_count: wordCount,\n      estimated_duration_seconds: Math.round(wordCount * 0.5), // Thai content speaks slower\n      created_at: new Date().toISOString()\n    });\n  }\n});\n\n// Return array of items\nreturn results.map(item => ({ json: item }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        -100
      ],
      "id": "0fc34644-0dad-4fac-a088-3eb42a962b92",
      "name": "Parse Video Content"
    },
    {
      "parameters": {
        "tableId": "={{ $('Channel Configuration').item.json.supabase_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.title }}"
            },
            {
              "fieldId": "content",
              "fieldValue": "={{ $json.content }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $json.status }}"
            },
            {
              "fieldId": "word_count",
              "fieldValue": "={{ $json.word_count }}"
            },
            {
              "fieldId": "estimated_duration_seconds",
              "fieldValue": "={{ $json.estimated_duration_seconds }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $json.created_at }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -400,
        -200
      ],
      "id": "05c25d29-cb71-4dcc-87e6-c6707cc997a7",
      "name": "Save to Channel Table",
      "credentials": {
        "supabaseApi": {
          "id": "your-supabase-credentials-id",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -200,
        -200
      ],
      "id": "5561f525-6f91-4c30-ac90-754f1aee33ec",
      "name": "Aggregate Results"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "summary",
              "name": "summary",
              "value": "={{ '🎬 Video Content Generation Complete!\\n\\n' + '📺 Channel: ' + $('Channel Configuration').item.json.channel_name + '\\n' + '📊 Table: ' + $('Channel Configuration').item.json.supabase_table + '\\n' + '🌐 Language: ' + $('Channel Configuration').item.json.content_language + '\\n' + '📝 Generated: ' + $('Aggregate Results').item.json.data.length + ' video scripts\\n' + '⏱️ Total Duration: ~' + Math.round($('Aggregate Results').item.json.data.reduce((sum, item) => sum + (item.estimated_duration_seconds || 0), 0) / 60) + ' minutes of content\\n\\n' + '📋 Generated Video Titles:\\n' + $('Aggregate Results').item.json.data.map((item, index) => (index + 1) + '. ' + item.title).join('\\n') + '\\n\\n' + '✅ All content saved with status: draft\\n' + '🔄 Ready for video generation workflow!' }}",
              "type": "string"
            },
            {
              "id": "total_videos",
              "name": "total_videos",
              "value": "={{ $('Aggregate Results').item.json.data.length }}",
              "type": "number"
            },
            {
              "id": "channel_info",
              "name": "channel_info",
              "value": "={{ { channel_name: $('Channel Configuration').item.json.channel_name, table_name: $('Channel Configuration').item.json.supabase_table, language: $('Channel Configuration').item.json.content_language } }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        -200
      ],
      "id": "960b2b69-25ab-41dd-87e8-1037b4e9b82e",
      "name": "Create Channel Report"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking 'Execute workflow'": {
      "main": [
        [
          {
            "node": "Configure me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure me": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Check if data exists1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Server isn't ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if data exists1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Get row for processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row for processing": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No more stories",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create the motivational speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the motivational speech": {
      "main": [
        [
          {
            "node": "Cleanup text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup text": {
      "main": [
        [
          {
            "node": "Create the script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create the motivational speech",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Create the script",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create the script": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Combine loop items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI image": {
      "main": [
        [
          {
            "node": "Upload image to server",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for the error / rate limit to go away",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload image to server": {
      "main": [
        [
          {
            "node": "TTS switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the error / rate limit to go away": {
      "main": [
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS switch": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating TTS (chatterbox)": {
      "main": [
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the TTS gets generated": {
      "main": [
        [
          {
            "node": "Get status of TTS generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of TTS generation": {
      "main": [
        [
          {
            "node": "TTS status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS status switch": {
      "main": [
        [
          {
            "node": "Setup TTS file_id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup TTS file_id": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Global TTS audio id": {
      "main": [
        [
          {
            "node": "Start generating captioned TTS video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating captioned TTS video": {
      "main": [
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the video gets generated": {
      "main": [
        [
          {
            "node": "Get video generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get video generation status": {
      "main": [
        [
          {
            "node": "Video generation switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video generation switch": {
      "main": [
        [
          {
            "node": "Setup media fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup media fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine loop items": {
      "main": [
        [
          {
            "node": "Start merging the videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start merging the videos": {
      "main": [
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the videos gets merged together": {
      "main": [
        [
          {
            "node": "Get status of the video merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of the video merge": {
      "main": [
        [
          {
            "node": "Video merge status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video merge status switch": {
      "main": [
        [
          {
            "node": "Save video id to the db",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save video id to the db": {
      "main": [
        [
          {
            "node": "Setup final video download URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup final video download URL": {
      "main": [
        [
          {
            "node": "Download the video for Postiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video for Postiz": {
      "main": [
        [
          {
            "node": "Upload video to Postiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video to Postiz": {
      "main": [
        [
          {
            "node": "Get Postiz integrations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Postiz integrations": {
      "main": [
        [
          {
            "node": "Merge integrations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge integrations": {
      "main": [
        [
          {
            "node": "Set integration id for YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set integration id for YouTube": {
      "main": [
        [
          {
            "node": "Schedule YouTube video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule YouTube video": {
      "main": [
        [
          {
            "node": "Setup final video download URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video": {
      "main": [
        [
          {
            "node": "Upload video to YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video to YouTube": {
      "main": [
        [
          {
            "node": "Set file ids to delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set file ids to delete": {
      "main": [
        [
          {
            "node": "For each file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For each file": {
      "main": [
        [
          {
            "node": "Delete tmp files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Configuration": {
      "main": [
        [
          {
            "node": "Generate Video Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Video Content": {
      "main": [
        [
          {
            "node": "Parse Video Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Video Content": {
      "main": [
        [
          {
            "node": "Save to Channel Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Channel Table": {
      "main": [
        [
          {
            "node": "Aggregate Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Results": {
      "main": [
        [
          {
            "node": "Create Channel Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {
    "instanceId": "339979314200287f32affa09285453b9225a94604e8acfa3770c75",
    "templateCredsSetupCompleted": false
  }
}